<?php
/**
 * Do not edit this file. 
 * Edit the config files found in the environments/ dir instead.
 * 
 * Your base production configuration goes in this file. Environment-specific
 * overrides go in their respective config/environments/{{WP_ENV}}.php file.
 *
 * A good default policy is to deviate from the production config as little as
 * possible. Try to define as much of your configuration in this file as you
 * can.
 * 
 * PHP version 7.4
 * 
 * @category Config
 * @package  IconAgency
 * @author   Icon Agency <hello@iconagency.com.au>
 * @license  https://opensource.org/licenses/MIT MIT
 * @link     https://iconagency.com.au
 */

use Roots\WPConfig\Config;

/**
 * Directory containing all of the site's files
 *
 * @var string
 */
$root_dir = dirname(__DIR__);

/**
 * Document Root
 *
 * @var string
 */
$webroot_dir = $root_dir . '/web';

/**
 * Set up our global environment constant and load its config first
 * Default: production
 */
define('WP_ENV', getenv('LAGOON_ENVIRONMENT_TYPE') ?: 'production');

/**
 * URLs
 */
Config::define('WP_HOME', getenv('LAGOON_ROUTE') ?: 'https://' . $_SERVER['HTTP_HOST']);
Config::define('WP_SITEURL', getenv('LAGOON_ROUTE') ?: 'https://' . $_SERVER['HTTP_HOST']);

/**
 * Fastly
 */
Config::define('PURGELY_FASTLY_KEY', getenv('FASTLY_API_TOKEN'));
Config::define('PURGELY_FASTLY_SERVICE_ID', getenv('FASTLY_API_SERVICE'));
Config::define('FASTLY_SITECODE', getenv('FASTLY_SITE_ID'));

/**
 * Custom Content Directory
 */
Config::define('CONTENT_DIR', '/app');
Config::define('WP_CONTENT_DIR', $webroot_dir . Config::get('CONTENT_DIR'));
Config::define('WP_CONTENT_URL', Config::get('WP_HOME') . Config::get('CONTENT_DIR'));

/**
 * DB settings
 */
Config::define('DB_NAME', getenv('MARIADB_DATABASE') ?: 'lagoon');
Config::define('DB_USER', getenv('MARIADB_USERNAME') ?: 'lagoon');
Config::define('DB_PASSWORD', getenv('MARIADB_PASSWORD') ?: 'lagoon');
Config::define('DB_HOST', getenv('MARIADB_HOST') ?: 'mariadb');
Config::define('DB_CHARSET', 'utf8mb4');
Config::define('DB_COLLATE', '');
$table_prefix = getenv('DB_PREFIX') ?: 'wp_';

/**
 * Authentication Unique Keys and Salts
 */
Config::define('AUTH_KEY', getenv('WP_AUTH_KEY'));
Config::define('SECURE_AUTH_KEY', getenv('WP_SECURE_AUTH_KEY'));
Config::define('LOGGED_IN_KEY', getenv('WP_LOGGED_IN_KEY'));
Config::define('NONCE_KEY', getenv('WP_NONCE_KEY'));
Config::define('AUTH_SALT', getenv('WP_AUTH_SALT'));
Config::define('SECURE_AUTH_SALT', getenv('WP_SECURE_AUTH_SALT'));
Config::define('LOGGED_IN_SALT', getenv('WP_LOGGED_IN_SALT'));
Config::define('NONCE_SALT', getenv('WP_NONCE_SALT'));

/**
 * Custom Settings
 */
Config::define('AUTOMATIC_UPDATER_DISABLED', true);
Config::define('DISABLE_WP_CRON', getenv('DISABLE_WP_CRON') ?: false);
// Disable the plugin and theme file editor in the admin
Config::define('DISALLOW_FILE_EDIT', true);
// Disable plugin and theme updates and installation from the admin
Config::define('DISALLOW_FILE_MODS', true);
// Limit the number of post revisions that Wordpress stores (true (default WP): store every revision)
Config::define('WP_POST_REVISIONS', getenv('WP_POST_REVISIONS') ?: true);

/**
 * Debugging Settings
 */
Config::define('WP_DEBUG_DISPLAY', false);
Config::define('WP_DEBUG_LOG', false);
Config::define('SCRIPT_DEBUG', false);
ini_set('display_errors', '0');

/**
 * Allow WordPress to detect HTTPS when used behind a reverse proxy or a load balancer
 * See https://codex.wordpress.org/Function_Reference/is_ssl#Notes
 */
if (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
    $_SERVER['HTTPS'] = 'on';
}

$all_config = __DIR__ . '/environments/all.php';

if (file_exists($all_config)) {
    include_once $all_config;
}

$env_config = __DIR__ . '/environments/' . WP_ENV . '.php';

if (file_exists($env_config)) {
    include_once $env_config;
}

Config::apply();

/**
 * Bootstrap WordPress
 */
if (!defined('ABSPATH')) {
    define('ABSPATH', $webroot_dir . '/wp/');
}
